<?php
/**
 * CreateReplenishmentRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Bol\Retailer
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * v10 - Retailer API
 *
 * The bol.com API for retailers.  # Authentication Our API requires authentication via OAuth2. The detailed steps to authenticate are explained [here](https://api.bol.com/retailer/public/Retailer-API/authentication.html)   # Demo scenarios Our API specification includes examples of the responses you can expect. For more information as well as more examples, we refer you to the following resources:   - [Demo environment](https://api.bol.com/retailer/public/Retailer-API/demo/demo.html) - [Demo scenarios](https://api.bol.com/retailer/public/Retailer-API/demo/v10-index.html)
 *
 * OpenAPI spec version: 10.x-oas3-oas3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.60
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Bol\Retailer\Model;

use \ArrayAccess;
use \Bol\Retailer\ObjectSerializer;

/**
 * CreateReplenishmentRequest Class Doc Comment
 *
 * @category Class
 * @package  Bol\Retailer
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CreateReplenishmentRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CreateReplenishmentRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'reference' => 'string',
        'delivery_info' => '\Bol\Retailer\Model\CreateDeliveryInfo',
        'labeling_by_bol' => 'bool',
        'number_of_load_carriers' => 'int',
        'pickup_appointment' => '\Bol\Retailer\Model\CreatePickupAppointment',
        'lines' => '\Bol\Retailer\Model\CreateReplenishmentLine[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'reference' => null,
        'delivery_info' => null,
        'labeling_by_bol' => null,
        'number_of_load_carriers' => 'int32',
        'pickup_appointment' => null,
        'lines' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'reference' => 'reference',
        'delivery_info' => 'deliveryInfo',
        'labeling_by_bol' => 'labelingByBol',
        'number_of_load_carriers' => 'numberOfLoadCarriers',
        'pickup_appointment' => 'pickupAppointment',
        'lines' => 'lines'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'reference' => 'setReference',
        'delivery_info' => 'setDeliveryInfo',
        'labeling_by_bol' => 'setLabelingByBol',
        'number_of_load_carriers' => 'setNumberOfLoadCarriers',
        'pickup_appointment' => 'setPickupAppointment',
        'lines' => 'setLines'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'reference' => 'getReference',
        'delivery_info' => 'getDeliveryInfo',
        'labeling_by_bol' => 'getLabelingByBol',
        'number_of_load_carriers' => 'getNumberOfLoadCarriers',
        'pickup_appointment' => 'getPickupAppointment',
        'lines' => 'getLines'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['delivery_info'] = isset($data['delivery_info']) ? $data['delivery_info'] : null;
        $this->container['labeling_by_bol'] = isset($data['labeling_by_bol']) ? $data['labeling_by_bol'] : null;
        $this->container['number_of_load_carriers'] = isset($data['number_of_load_carriers']) ? $data['number_of_load_carriers'] : null;
        $this->container['pickup_appointment'] = isset($data['pickup_appointment']) ? $data['pickup_appointment'] : null;
        $this->container['lines'] = isset($data['lines']) ? $data['lines'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['reference'] === null) {
            $invalidProperties[] = "'reference' can't be null";
        }
        if ($this->container['labeling_by_bol'] === null) {
            $invalidProperties[] = "'labeling_by_bol' can't be null";
        }
        if ($this->container['number_of_load_carriers'] === null) {
            $invalidProperties[] = "'number_of_load_carriers' can't be null";
        }
        if ($this->container['lines'] === null) {
            $invalidProperties[] = "'lines' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference Custom user reference for this replenishment. Must contain at least 1 digit and only upper case characters allowed.
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets delivery_info
     *
     * @return \Bol\Retailer\Model\CreateDeliveryInfo
     */
    public function getDeliveryInfo()
    {
        return $this->container['delivery_info'];
    }

    /**
     * Sets delivery_info
     *
     * @param \Bol\Retailer\Model\CreateDeliveryInfo $delivery_info delivery_info
     *
     * @return $this
     */
    public function setDeliveryInfo($delivery_info)
    {
        $this->container['delivery_info'] = $delivery_info;

        return $this;
    }

    /**
     * Gets labeling_by_bol
     *
     * @return bool
     */
    public function getLabelingByBol()
    {
        return $this->container['labeling_by_bol'];
    }

    /**
     * Sets labeling_by_bol
     *
     * @param bool $labeling_by_bol Indicates whether the replenishment will be labeled by bol.com.
     *
     * @return $this
     */
    public function setLabelingByBol($labeling_by_bol)
    {
        $this->container['labeling_by_bol'] = $labeling_by_bol;

        return $this;
    }

    /**
     * Gets number_of_load_carriers
     *
     * @return int
     */
    public function getNumberOfLoadCarriers()
    {
        return $this->container['number_of_load_carriers'];
    }

    /**
     * Sets number_of_load_carriers
     *
     * @param int $number_of_load_carriers The number of parcels in this replenishment. Note: if you are using the bol.com pickup service, the maximum number is 20.
     *
     * @return $this
     */
    public function setNumberOfLoadCarriers($number_of_load_carriers)
    {
        $this->container['number_of_load_carriers'] = $number_of_load_carriers;

        return $this;
    }

    /**
     * Gets pickup_appointment
     *
     * @return \Bol\Retailer\Model\CreatePickupAppointment
     */
    public function getPickupAppointment()
    {
        return $this->container['pickup_appointment'];
    }

    /**
     * Sets pickup_appointment
     *
     * @param \Bol\Retailer\Model\CreatePickupAppointment $pickup_appointment pickup_appointment
     *
     * @return $this
     */
    public function setPickupAppointment($pickup_appointment)
    {
        $this->container['pickup_appointment'] = $pickup_appointment;

        return $this;
    }

    /**
     * Gets lines
     *
     * @return \Bol\Retailer\Model\CreateReplenishmentLine[]
     */
    public function getLines()
    {
        return $this->container['lines'];
    }

    /**
     * Sets lines
     *
     * @param \Bol\Retailer\Model\CreateReplenishmentLine[] $lines lines
     *
     * @return $this
     */
    public function setLines($lines)
    {
        $this->container['lines'] = $lines;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
